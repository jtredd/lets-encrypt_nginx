version: '3.4'
services:
  nginx:
    restart: unless-stopped
    image: nginx:latest
    #    env_file:
    #  - ./nginx/example.env
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    container_name: ${NGINX_WEB:-nginx}
    restart: always
    links:
      - web:web
    ports:
     - "${IP:-0.0.0.0}:80:80"
     - "${IP:-0.0.0.0}:443:443"
    volumes:
      - ${NGINX_FILES:-./data}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES:-./data}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES:-./data}/html:/usr/share/nginx/html
      - ${NGINX_FILES:-./data}/certs:/etc/nginx/certs:ro
      - ${NGINX_FILES:-./data}/htpasswd:/etc/nginx/htpasswd:ro
    logging:
      options:
        max-size: "${NGINX_WEB_LOG_MAX_SIZE:-4m}"
        max-file: "${NGINX_WEB_LOG_MAX_FILE:-10}"
 
  nginx-gen:
    image: jwilder/docker-gen
    depends_on:
      - nginx
    command: -notify-sighup ${NGINX_WEB:-nginx} -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    container_name: ${DOCKER_GEN:-nginx-gen}
    restart: always
    volumes:
      - ${NGINX_FILES:-./data}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES:-./data}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES:-./data}/html:/usr/share/nginx/html
      - ${NGINX_FILES:-./data}/certs:/etc/nginx/certs:ro
      - ${NGINX_FILES:-./data}/htpasswd:/etc/nginx/htpasswd:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:latest
    depends_on: 
      - nginx-gen
    container_name: ${LETS_ENCRYPT:-nginx-lets}
    restart: always
    volumes:
      - ${NGINX_FILES:-./data}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES:-./data}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES:-./data}/html:/usr/share/nginx/html
      - ${NGINX_FILES:-./data}/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      NGINX_DOCKER_GEN_CONTAINER: ${DOCKER_GEN:-nginx-gen}
      NGINX_PROXY_CONTAINER: ${NGINX_WEB:-nginx}

# jekyll:
#   restart: unless-stopped
#   build: 
#     context: ./jekyll
#   working_dir: /srv/jekyll
#   env_file:
#     - ./jekyll/exampleexample.env
#   environment:
#     - VIRTUAL_PORT=4000
#   volumes:
#     - "./jekyll:/srv/jekyll"
#   ports:
#     - 4000:4000
#     - 35729:35729
#     - 3000:3000
#   command: 
#     - jekyll serve --config _config.yml,_staging_config.yml --watch --port 4000 

# gollum:
#   restart: unless-stopped
#   build: 
#     context: ./gollum
#   environment:
#     - VIRTUAL_PORT=80
#   env_file:
#     - ./gollum/example.env
#   volumes:
#     - ./gollum/wiki:/srv/web/wiki
#   working_dir: /srv/web
#   command:
#     - gollum --port 80 --show-all --live-preview --h1-title --user-icons gravatar --collapse-tree /srv/web/wiki

  postgres:
    restart: always
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    restart: always
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  django_gunicorn:
    build: 
      context: ${WEB_FILES:-./django_gunicorn}
    volumes:
      - ${WEB_FILES:-./django_gunicorn}:/srv/web/app
    links:
      - postgres:postgres
      - redis:redis
    env_file:
      - ./django_gunicorn/example.env
    working_dir: /srv/web/app

volumes:
  db-data:
  redis-data:
  static-data:
